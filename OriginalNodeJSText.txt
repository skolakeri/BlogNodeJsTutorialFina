const express = require('express');
const morgan = require('morgan');
const mongoose = require('mongoose');

const { render } = require('ejs');
const blogRoutes = require('./routes/blogRoutes');
// set up express app
const app = express();

// Connect to mongoDB
const dbURI = 'mongodb+srv://netninja:test1234@swamphacks.g2bot.mongodb.net/SwampHacks?retryWrites=true&w=majority'
// using mongoose to connect, no deprecation warnings. an async task
mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })
    // then connects to database, only listen to request after connection established
    .then(result => app.listen(3000))
    .catch(err => console.log(err));

// EJS (Register view engine for dynamic content on website)
app.set('view engine', 'ejs');
// app.set('views', 'diffFolder);
// Used for requests, takes all url encoded data and parses it into an object
app.use(express.urlencoded({ extended: true}));

// middleware & static files
//app.use(express.static('public'));

app.use(morgan('dev'));

// applies
app.use(blogRoutes);
// 404 page, use function will fire if this request is reached and none get handlers have been executed
app.use((req, res) => {
    //res.status(404).sendFile('./views/404.html', { root: __dirname})
    res.status(404).render('404', { title: '404' });
})